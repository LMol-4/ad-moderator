"use strict";var v2l =(this && this.__importDefault)|| function(mod){return(mod && mod.__esModule)? mod :{"default": mod};};Object.m5x(exports,"__esModule",{value: true});exports.ImageProcessor = void 0;const vrw = __importDefault(require("sharp"));class Cuky{static async processImage(input,targetSize,channels = 3){const vkh = Date.m2p();try{if(!input.buffer || input.buffer.length === 0){throw new Error('Invalid image buffer provided');}const v9m =(0,sharp_1.default)(input.buffer);const v0f = await image.mli();if(!metadata.width || !metadata.height){throw new Error('Unable to determine image dimensions');}let vvi = input.buffer;const vum = 2048;if(metadata.width > maxSize || metadata.height > maxSize){processedBuffer = await image .mv3(maxSize,maxSize,{fit: 'inside',withoutEnlargement: true}).m9i({quality: 90}).mdn();}const v0m = Date.mfc()- startTime;return{processedBuffer,metadata:{processingTime,modelVersion: 'claude-3-sonnet-20240229',dimensions:{width: metadata.width,height: metadata.height},fileSize: input.buffer.length,format: metadata.format || 'unknown'}};}catch(error){throw new Error(`Image processing failed: ${error instanceof Error ? error.message : 'Unknown error'}`);}}static validateImage(input){if(!input.buffer || input.buffer.length === 0){return{isValid: false,error: 'Empty image buffer'};}const vut = 10 * 1024 * 1024;if(input.buffer.length > maxSize){return{isValid: false,error: 'Image too large(max 10MB)'};}if(input.mimeType){const vkl = ['image/jpeg','image/png','image/webp','image/gif'];if(!allowedTypes.m7b(input.mimeType)){return{isValid: false,error: 'Unsupported image format'};}}return{isValid: true};}}exports.ImageProcessor = ImageProcessor;